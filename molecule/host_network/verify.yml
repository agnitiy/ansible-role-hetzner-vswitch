---
- name: Verify vSwitch Configuration
  hosts: platforms
  tasks:
      - name: Get vswtiches
        uri:
          url: "{{ hetzner_vswitch_webservice_base_url }}/vswitch"
          method: GET
          user: "{{ hetzner_vswitch_webservice_username }}"
          password: "{{ hetzner_vswitch_webservice_password }}"
          status_code: 200
          force_basic_auth: yes
        register: get_vswitch_response
        delegate_to: localhost
      - name: Set network related variables
        set_fact:
          server_ip: "{{ ansible_default_ipv4.address }}"
          actual_server_ip: "{{ get_vswitch_response.json[0].server[0].server_ip }}"
          interface_name: "{{ ansible_default_ipv4.interface }}.{{ get_vswitch_response.json[0].vlan }}"
      - name: Assert vSwitch server IP matches
        assert:
          that: actual_server_ip == server_ip
          fail_msg: "Found: {{ actual_server_ip }}, expected: {{ server_ip  }}."
      - name: Get server network configuration
        slurp:
          src: "/etc/network/interfaces.d/{{ interface_name }}"
        register: get_network_interface_config
      - name: Set network interface config
        set_fact:
          actual_network_interface_config: "{{ get_network_interface_config['content'] | b64decode }}"
          network_interface_config: |
            # Hetzner vSwitch 'Existing vSwitch' VLAN 4001 Configuration
            # https://wiki.hetzner.de/index.php/Vswitch/en
            auto {{ interface_name }}
            iface {{ interface_name }} inet static
              address 192.168.100.1
              netmask 255.255.255.0
              vlan-raw-device {{ ansible_default_ipv4.interface }}
              mtu 1400
      - name: Assert server network interface config
        assert:
          that: actual_network_interface_config == network_interface_config
          fail_msg: "Found: {{ actual_network_interface_config }}, expected: {{ network_interface_config  }}."
