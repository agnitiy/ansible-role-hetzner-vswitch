---
- name: "Set flag for creation of the vSwitch"
  set_fact:
    must_create_vswitch: true  # FIXME: no camelcase
    hetzner_vswitch_vswitch_id: "(not defined)"

- name: "Fetching the lists of vSwitches to see it it is already created"
  uri:
    force_basic_auth: yes
    user: "{{ hetzner_vswitch_hetzner_robot_api_user }}"
    password: "{{ hetzner_vswitch_hetzner_robot_api_pass }}"
    url: "{{ hetzner_vswitch_hetzner_robot_api_url }}/vswitch"
    method: GET
    return_content: yes
  register: taskoutput

- debug:
    msg: "{{ taskoutput }}"

- name: "Remove flag if vSwitch is not needed."
  set_fact:
    must_create_vswitch: false
    hetzner_vswitch_vswitch_id: "{{ item.id }}"
  loop: "{{ taskoutput.json }}"
  when: taskoutput is defined and not item.cancelled|bool and item.vlan|string == hetzner_vswitch_vlan_id|string

- debug:
    msg: "The vSwitch was not found and WILL BE CREATED."
  when: must_create_vswitch

- debug:
    msg: "Will NOT create the vSwitch as it seems to be present."
  when: not must_create_vswitch

- name: "Create the VSwitch, as it is missing."
  uri:
    url: "{{ hetzner_vswitch_hetzner_robot_api_url }}/vswitch"
    method: POST
    body_format: "form-urlencoded"
    body:
      name: "{{ hetzner_vswitch_vlan_name }}"
      vlan: "{{ hetzner_vswitch_vlan_id }}"
      cancelled: false
    url_username: "{{ hetzner_vswitch_hetzner_robot_api_user }}"
    url_password: "{{ hetzner_vswitch_hetzner_robot_api_pass }}"
    force_basic_auth: yes
    return_content: yes
    force: yes
    status_code:
      - 200
      - 201
  register: create_vswitch_output
  when: must_create_vswitch
